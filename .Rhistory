years <- data.frame(anos = seq(0.5,10,0.5), vertices = c(126, 252, 378, 504, 630, 756, 882, 1008, 1134, 1260, 1386, 1512, 1638, 1764, 1890, 2016, 2142, 2268, 2394, 2520))
value.nominal <- df.yield %>% filter(type == "nominal_return") %>% select(vertices = n.biz.days, nominal = value) %>% merge(years, by = "vertices")
value.real <- df.yield %>% filter(type == "real_return") %>% select(vertices = n.biz.days, real = value) %>% merge(years, by = "vertices")
value.imp <- df.yield %>% filter(type == "implicit_inflation") %>% select(vertices = n.biz.days, implicita = value) %>% merge(years, by = "vertices")
df.incorporar <- value.nominal %>%
merge(value.real, by = "vertices") %>%
merge(value.imp, by = "vertices") %>%
select(anos, vertices, real, nominal, implicita)
df.incorporar$data <- as.character(df.yield[1,"current.date"])
# Coletando o resto dos dados
dados_real <- data.table(readRDS("dados_real"))
df.bind <- df.incorporar %>% select(data, anos, real)
dados_real <- rbindlist(list(df.bind, dados_real))[!duplicated(data)]
# saveRDS(dados_real, "dados_real")
dados_nominal <- readRDS("dados_nominal")
df.bind <- df.incorporar %>% select(data, anos, nominal) %>% rbind(dados_nominal)
dados_nominal <- rbindlist(list(df.bind, dados_nominal))[!duplicated(data)]
# saveRDS(dados_nominal, "dados_nominal")
dados_implicita <- readRDS("dados_implicita")
df.bind <- df.incorporar %>% select(data, anos, implicita) %>% rbind(dados_implicita)
dados_implicita <- rbindlist(list(df.bind, dados_implicita))[!duplicated(data)]
# saveRDS(dados_implicita, "dados_implicita")
# Definindo as datas
datas <- unique(dados_real$data)
datas_tratadas <- as.vector(as.character((convertToDate(datas))))
# Unindo dados
dados_lista <- list(implicita = dados_implicita, nominal = dados_nominal, real = dados_real)
View(dados_real)
runApp('app 2.0.R')
runApp('app 2.0.R')
#################################################################################################################
# Shiny app com dados da estrutura a termo da taxa de juros
# Felipe Simplicio Ferreira
# Data: 24-06-2021
#################################################################################################################
# Pacotes
library(shiny)
library(tidyverse)
library(rio)
library(openxlsx)
library(shinydashboard)
library(GetTDData)
library(data.table)
# Coletando dados do dia
df.yield <- get.yield.curve()
years <- data.frame(anos = seq(0.5,10,0.5), vertices = c(126, 252, 378, 504, 630, 756, 882, 1008, 1134, 1260, 1386, 1512, 1638, 1764, 1890, 2016, 2142, 2268, 2394, 2520))
value.nominal <- df.yield %>% filter(type == "nominal_return") %>% select(vertices = n.biz.days, nominal = value) %>% merge(years, by = "vertices")
value.real <- df.yield %>% filter(type == "real_return") %>% select(vertices = n.biz.days, real = value) %>% merge(years, by = "vertices")
value.imp <- df.yield %>% filter(type == "implicit_inflation") %>% select(vertices = n.biz.days, implicita = value) %>% merge(years, by = "vertices")
df.incorporar <- value.nominal %>%
merge(value.real, by = "vertices") %>%
merge(value.imp, by = "vertices") %>%
select(anos, vertices, real, nominal, implicita)
df.incorporar$data <- as.character(df.yield[1,"current.date"])
# Coletando o resto dos dados
dados_real <- data.table(readRDS("dados_real"))
dados_real <- df.incorporar %>% select(data, anos, real) %>% rbind(dados_real)
# dados_real <- rbindlist(list(df.bind, dados_real))[!duplicated(data)]
# saveRDS(dados_real, "dados_real")
dados_nominal <- readRDS("dados_nominal")
dados_nominal <- df.incorporar %>% select(data, anos, nominal) %>% rbind(dados_nominal)
# dados_nominal <- rbindlist(list(df.bind, dados_nominal))[!duplicated(data)]
# saveRDS(dados_nominal, "dados_nominal")
dados_implicita <- readRDS("dados_implicita")
dados_implicita <- df.incorporar %>% select(data, anos, implicita) %>% rbind(dados_implicita)
# dados_implicita <- rbindlist(list(df.bind, dados_implicita))[!duplicated(data)]
# saveRDS(dados_implicita, "dados_implicita")
# Definindo as datas
datas <- unique(dados_real$data)
datas_tratadas <- as.vector(as.character((convertToDate(datas))))
# Unindo dados
dados_lista <- list(implicita = dados_implicita, nominal = dados_nominal, real = dados_real)
runApp('app 2.0.R')
?ggplotly
library(shiny)
library(tidyverse)
library(rio)
library(openxlsx)
library(plotly)
library(shinydashboard)
runApp()
?as.character
runApp()
runApp()
runApp()
runApp()
runApp()
?ggplotly
?layout
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?encoding
?stringi
library(stringi)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
?layout
runApp()
runApp()
?ggplotly
runApp()
runApp()
runApp()
?mainPanel
runApp()
runApp()
runApp()
runApp()
?scale_y_continuous
runApp()
runApp()
runApp()
runApp()
runApp()
?fluidPage
?plotlyOutput
runApp()
runApp()
runApp()
runApp()
?layout
runApp()
a = 123
a = 1,2,3
a = [1,2,3]
a = ["1","2","3"]
rm(a)
a = []
a = [""]
a <-  [""]
a = list(1,2,3)
a
rm(a)
a = 1
b = 2
c = a +b
a = 1,2,3
a = c(1,2,3)
n(a)
nrow(a)
ncol(a)
lenght(a)
length(a)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?&
runApp()
#################################################################################################################
# Shiny app com dados da estrutura a termo da taxa de juros
# Felipe Simplicio Ferreira
# Data: 24-06-2021
#################################################################################################################
# Pacotes
library(shiny)
library(tidyverse)
library(rio)
library(openxlsx)
library(plotly)
library(shinydashboard)
library(stringi)
# Importando planilha
# Definindo as datas
datas <- import("curva_zero.xlsx", col_names = F)
datas <- datas[1,]
seleciona_datas <- seq(2,length(datas), 8)
datas_tratadas <- NA
for (i in 1:length(seleciona_datas)){
datas_tratadas[i] <- datas[1,seleciona_datas[i]]
}
datas_tratadas <- as.vector(as.character((convertToDate(datas_tratadas))))
# Coletando o resto dos dados
dados <- import("curva_zero.xlsx", skip = 5, col_names = F)
seleciona_dados <- seq(1,length(dados), 8)
for (i in 1:length(datas_tratadas)){
dados_dia <- dados[0:22,seleciona_dados[i]:(seleciona_dados[i]+4)]
names(dados_dia) <- dados_dia[1,]
dados_dia <- dados_dia[-1,] %>% mutate_all(function(x) as.numeric(as.character(x))) %>%
as.data.frame() %>% drop_na()
names(dados_dia) <- c("anos", "vertices", "real", "nominal", "implicita")
dados_dia["data"] <- datas_tratadas[i]
nome_arquivo <- as.character(datas_tratadas[i])
assign(nome_arquivo, dados_dia) #Nomeando arquivos
print(paste(i, length(datas_tratadas), sep = '/')) #Printa o progresso
}
dados_real <- data.frame()
for (i in 1:length(datas_tratadas)){
dados_a_incorporar <- select(get(datas_tratadas[i]), data, anos, real)
dados_real <- rbind(dados_real, dados_a_incorporar)
print(paste(i, length(datas_tratadas), sep = '/')) #Printa o progresso
}
dados_nominal <- data.frame()
for (i in 1:length(datas_tratadas)){
dados_a_incorporar <- select(get(datas_tratadas[i]), data, anos, nominal)
dados_nominal <- rbind(dados_nominal, dados_a_incorporar)
print(paste(i, length(datas_tratadas), sep = '/')) #Printa o progresso
}
dados_implicita <- data.frame()
for (i in 1:length(datas_tratadas)){
dados_a_incorporar <- select(get(datas_tratadas[i]), data, anos, implicita)
dados_implicita <- rbind(dados_implicita, dados_a_incorporar)
print(paste(i, length(datas_tratadas), sep = '/')) #Printa o progresso
}
dados_lista <- list(implicita = dados_implicita, nominal = dados_nominal, real = dados_real)
dados_lista
View(dados_lista)
View(dados_nominal)
View(dados_real)
View(dados_implicita)
max(dados_nominal$nominal)
min(dados_nominal$nominal)
runApp()
runApp()
# Pacotes
library(GetTDData)
library(tidyr)
library(rio)
library(dplyr)
# Coletando dados
df.yield <- get.yield.curve()
years <- data.frame(anos = seq(0.5,10,0.5), vertices = c(126, 252, 378, 504, 630, 756, 882, 1008, 1134, 1260, 1386, 1512, 1638, 1764, 1890, 2016, 2142, 2268, 2394, 2520))
value.nominal <- df.yield %>% filter(type == "nominal_return") %>% select(vertices = n.biz.days, nominal = value) %>% merge(years, by = "vertices")
value.real <- df.yield %>% filter(type == "real_return") %>% select(vertices = n.biz.days, real = value) %>% merge(years, by = "vertices")
value.imp <- df.yield %>% filter(type == "implicit_inflation") %>% select(vertices = n.biz.days, implicita = value) %>% merge(years, by = "vertices")
values <- value.nominal %>%
merge(value.real, by = "vertices") %>%
merge(value.imp, by = "vertices") %>%
select(anos, vertices, real, nominal, implicita)
values$data <- as.character(df.yield[1,"current.date"])
# Nomeando (colocando a data)
nome <- as.character(df.yield[1,"current.date"])
assign(nome, values)
View(`2021-11-11`)
#################################################################################################################
# Shiny app com dados da estrutura a termo da taxa de juros
# Felipe Simplicio Ferreira
# Data: 24-06-2021
#################################################################################################################
# Pacotes
library(shiny)
library(tidyverse)
library(rio)
library(openxlsx)
library(shinydashboard)
library(GetTDData)
library(data.table)
# Coletando dados do dia
df.yield <- get.yield.curve()
years <- data.frame(anos = seq(0.5,10,0.5), vertices = c(126, 252, 378, 504, 630, 756, 882, 1008, 1134, 1260, 1386, 1512, 1638, 1764, 1890, 2016, 2142, 2268, 2394, 2520))
value.nominal <- df.yield %>% filter(type == "nominal_return") %>% select(vertices = n.biz.days, nominal = value) %>% merge(years, by = "vertices")
value.real <- df.yield %>% filter(type == "real_return") %>% select(vertices = n.biz.days, real = value) %>% merge(years, by = "vertices")
value.imp <- df.yield %>% filter(type == "implicit_inflation") %>% select(vertices = n.biz.days, implicita = value) %>% merge(years, by = "vertices")
df.incorporar <- value.nominal %>%
merge(value.real, by = "vertices") %>%
merge(value.imp, by = "vertices") %>%
select(anos, vertices, real, nominal, implicita)
df.incorporar$data <- as.character(df.yield[1,"current.date"])
# Coletando o resto dos dados
dados_real <- data.table(readRDS("dados_real"))
dados_real <- df.incorporar %>% select(data, anos, real) %>% rbind(dados_real)
# dados_real <- rbindlist(list(df.bind, dados_real))[!duplicated(data)]
# saveRDS(dados_real, "dados_real")
dados_nominal <- readRDS("dados_nominal")
dados_nominal <- df.incorporar %>% select(data, anos, nominal) %>% rbind(dados_nominal)
# dados_nominal <- rbindlist(list(df.bind, dados_nominal))[!duplicated(data)]
# saveRDS(dados_nominal, "dados_nominal")
dados_implicita <- readRDS("dados_implicita")
dados_implicita <- df.incorporar %>% select(data, anos, implicita) %>% rbind(dados_implicita)
# dados_implicita <- rbindlist(list(df.bind, dados_implicita))[!duplicated(data)]
# saveRDS(dados_implicita, "dados_implicita")
dados_real <- df.incorporar %>% select(data, anos, real) %>% rbind(dados_real)
dados_real <- dados_real %>% distinct()
dados_real <- df.incorporar %>% select(data, anos, real) %>% rbind(dados_real)
dados_real <- dados_real %>% distinct()
dados_real <- data.table(readRDS("dados_real"))
dados_real <- df.incorporar %>% select(data, anos, real) %>% rbind(dados_real) %>% distinct()
saveRDS(dados_real, "dados_real")
dados_nominal <- readRDS("dados_nominal")
dados_nominal <- df.incorporar %>% select(data, anos, nominal) %>% rbind(dados_nominal) %>% distinct()
saveRDS(dados_nominal, "dados_nominal")
dados_implicita <- readRDS("dados_implicita")
dados_implicita <- df.incorporar %>% select(data, anos, implicita) %>% rbind(dados_implicita) %>% distinct()
saveRDS(dados_implicita, "dados_implicita")
View(dados_real)
#################################################################################################################
# Shiny app com dados da estrutura a termo da taxa de juros
# Felipe Simplicio Ferreira
# Data: 24-06-2021
#################################################################################################################
# Pacotes
library(shiny)
library(tidyverse)
library(rio)
library(openxlsx)
library(plotly)
library(shinydashboard)
library(stringi)
# Importando planilha
# Definindo as datas
datas <- import("curva_zero.xlsx", col_names = F)
datas <- datas[1,]
seleciona_datas <- seq(2,length(datas), 8)
datas_tratadas <- NA
for (i in 1:length(seleciona_datas)){
datas_tratadas[i] <- datas[1,seleciona_datas[i]]
}
datas_tratadas <- as.vector(as.character((convertToDate(datas_tratadas))))
# Coletando o resto dos dados
dados <- import("curva_zero.xlsx", skip = 5, col_names = F)
seleciona_dados <- seq(1,length(dados), 8)
for (i in 1:length(datas_tratadas)){
dados_dia <- dados[0:22,seleciona_dados[i]:(seleciona_dados[i]+4)]
names(dados_dia) <- dados_dia[1,]
dados_dia <- dados_dia[-1,] %>% mutate_all(function(x) as.numeric(as.character(x))) %>%
as.data.frame() %>% drop_na()
names(dados_dia) <- c("anos", "vertices", "real", "nominal", "implicita")
dados_dia["data"] <- datas_tratadas[i]
nome_arquivo <- as.character(datas_tratadas[i])
assign(nome_arquivo, dados_dia) #Nomeando arquivos
print(paste(i, length(datas_tratadas), sep = '/')) #Printa o progresso
}
dados_real <- data.frame()
for (i in 1:length(datas_tratadas)){
dados_a_incorporar <- select(get(datas_tratadas[i]), data, anos, real)
dados_real <- rbind(dados_real, dados_a_incorporar)
print(paste(i, length(datas_tratadas), sep = '/')) #Printa o progresso
}
dados_nominal <- data.frame()
for (i in 1:length(datas_tratadas)){
dados_a_incorporar <- select(get(datas_tratadas[i]), data, anos, nominal)
dados_nominal <- rbind(dados_nominal, dados_a_incorporar)
print(paste(i, length(datas_tratadas), sep = '/')) #Printa o progresso
}
dados_implicita <- data.frame()
for (i in 1:length(datas_tratadas)){
dados_a_incorporar <- select(get(datas_tratadas[i]), data, anos, implicita)
dados_implicita <- rbind(dados_implicita, dados_a_incorporar)
print(paste(i, length(datas_tratadas), sep = '/')) #Printa o progresso
}
saveRDS(dados_real, "dados_real")
saveRDS(dados_nominal, "dados_nominal")
saveRDS(dados_implicita, "dados_implicita")
#################################################################################################################
# Script para coletar curvas zero diariamente
# Felipe Simplicio Ferreira
# Data: 12-11-2021
#################################################################################################################
# Pacotes
library(GetTDData)
library(tidyr)
library(rio)
library(dplyr)
# Coletando dados do dia
df.yield <- get.yield.curve()
years <- data.frame(anos = seq(0.5,10,0.5), vertices = c(126, 252, 378, 504, 630, 756, 882, 1008, 1134, 1260, 1386, 1512, 1638, 1764, 1890, 2016, 2142, 2268, 2394, 2520))
value.nominal <- df.yield %>% filter(type == "nominal_return") %>% select(vertices = n.biz.days, nominal = value) %>% merge(years, by = "vertices")
value.real <- df.yield %>% filter(type == "real_return") %>% select(vertices = n.biz.days, real = value) %>% merge(years, by = "vertices")
value.imp <- df.yield %>% filter(type == "implicit_inflation") %>% select(vertices = n.biz.days, implicita = value) %>% merge(years, by = "vertices")
df.incorporar <- value.nominal %>%
merge(value.real, by = "vertices") %>%
merge(value.imp, by = "vertices") %>%
select(anos, vertices, real, nominal, implicita)
df.incorporar$data <- as.character(df.yield[1,"current.date"])
# Juntando com o resto dos dados
dados_real <- readRDS("dados_real")
dados_real <- df.incorporar %>% select(data, anos, real) %>% rbind(dados_real) %>% distinct()
saveRDS(dados_real, "dados_real")
dados_nominal <- readRDS("dados_nominal")
dados_nominal <- df.incorporar %>% select(data, anos, nominal) %>% rbind(dados_nominal) %>% distinct()
saveRDS(dados_nominal, "dados_nominal")
dados_implicita <- readRDS("dados_implicita")
dados_implicita <- df.incorporar %>% select(data, anos, implicita) %>% rbind(dados_implicita) %>% distinct()
saveRDS(dados_implicita, "dados_implicita")
#################################################################################################################
# Script para coletar curvas zero diariamente
# Felipe Simplicio Ferreira
# Data: 12-11-2021
#################################################################################################################
# Pacotes
library(GetTDData)
library(tidyr)
library(rio)
library(dplyr)
# Coletando dados do dia
df.yield <- get.yield.curve()
years <- data.frame(anos = seq(0.5,10,0.5), vertices = c(126, 252, 378, 504, 630, 756, 882, 1008, 1134, 1260, 1386, 1512, 1638, 1764, 1890, 2016, 2142, 2268, 2394, 2520))
value.nominal <- df.yield %>% filter(type == "nominal_return") %>% select(vertices = n.biz.days, nominal = value) %>% merge(years, by = "vertices")
value.real <- df.yield %>% filter(type == "real_return") %>% select(vertices = n.biz.days, real = value) %>% merge(years, by = "vertices")
value.imp <- df.yield %>% filter(type == "implicit_inflation") %>% select(vertices = n.biz.days, implicita = value) %>% merge(years, by = "vertices")
df.incorporar <- value.nominal %>%
merge(value.real, by = "vertices") %>%
merge(value.imp, by = "vertices") %>%
select(anos, vertices, real, nominal, implicita)
df.incorporar$data <- as.character(df.yield[1,"current.date"])
# Juntando com o resto dos dados
dados_real <- readRDS("dados_real")
dados_real <- df.incorporar %>% select(data, anos, real) %>% rbind(dados_real) %>% distinct()
saveRDS(dados_real, "dados_real")
dados_nominal <- readRDS("dados_nominal")
dados_nominal <- df.incorporar %>% select(data, anos, nominal) %>% rbind(dados_nominal) %>% distinct()
saveRDS(dados_nominal, "dados_nominal")
dados_implicita <- readRDS("dados_implicita")
dados_implicita <- df.incorporar %>% select(data, anos, implicita) %>% rbind(dados_implicita) %>% distinct()
saveRDS(dados_implicita, "dados_implicita")
View(dados_real)
taskscheduleR:::taskschedulerAddin()
#Script para dados da curva zero
#Feito por: Felipe Simplício Ferreira
#última atualização: 25/05/2021
##Carregando pacotes que serão utilizados
library(tidyverse)
library(rio)
library(openxlsx)
# library(shiny)
# library(ggrepel)
library(scales)
library(plotly)
##Definindo caminho
setwd("D:/Documentos/GitHub/dashboard_curva_zero")
#Importando planilha
#Definindo as datas
datas <- import("curva_zero.xlsx", col_names = F)
datas <- datas[1,]
seleciona_datas <- seq(2,length(datas), 8)
datas_tratadas <- NA
for (i in 1:length(seleciona_datas)){
datas_tratadas[i] <- datas[1,seleciona_datas[i]]
}
datas_tratadas <- as.vector(as.character((convertToDate(datas_tratadas))))
#Coletando o resto dos dados
dados <- import("curva_zero.xlsx", skip = 5, col_names = F)
seleciona_dados <- seq(1,length(dados), 8)
for (i in 1:length(datas_tratadas)){
dados_dia <- dados[0:22,seleciona_dados[i]:(seleciona_dados[i]+4)]
names(dados_dia) <- dados_dia[1,]
dados_dia <- dados_dia[-1,] %>% mutate_all(function(x) as.numeric(as.character(x))) %>%
as.data.frame() %>% drop_na()
names(dados_dia) <- c("anos", "vertices", "real", "nominal", "implícita")
nome_arquivo <- as.character(datas_tratadas[i])
assign(nome_arquivo, dados_dia) #Nomeando arquivos
print(paste(i, length(datas_tratadas), sep = '/')) #Printa o progresso da repetição
}
#Selecionando data
usuario_data <- function(){
resposta_dados <- readline(prompt = "Escolha um dado (nominal, real ou implícita): ")
opcoes_dados <- c("nominal", "real", "implícita")
while(is.element(resposta_dados, opcoes_dados) == F){
resposta_dados <- readline(prompt = "Escolha um dado (nominal, real ou implícita): ")
}
resposta_data <- readline(prompt = "Escolha uma data no formato YYYY-MM-DD: ")
while(is.element(resposta_data, datas_tratadas) == F){
print(datas_tratadas)
resposta_data <- readline(prompt = "Escolha uma data no formato YYYY-MM-DD: ")
}
dado_graf <- get(resposta_data) %>% select(anos, all_of(resposta_dados)) %>% rename(!!resposta_data := resposta_dados)
graf <- ggplot(dado_graf, aes(x = anos, y = get(!!resposta_data), label = sprintf("%0.2f", round(dado_graf[,2],2)))) +
geom_line() + geom_point() +
scale_x_continuous(breaks = round(seq(min(dado_graf$anos), max(dado_graf$anos), by = 0.5),1)) +
scale_y_continuous(breaks = round(seq(min(dado_graf[,2]), max(dado_graf[,2]), by = 0.5),1)) +
theme(axis.text.x=element_text(angle=90, hjust=1)) +
labs(title = paste("Curva zero", resposta_data, sep = " "), subtitle = resposta_dados,
caption = "Fonte: Ambima") + ylab("%") + xlab("Anos")
# show(graf)
graf <- graf %>% ggplotly() %>% style(hoverinfo = "y")
show(graf)
for (i in 1:length(datas_tratadas)){
resposta_data_nova <- readline(prompt = "Escolha uma data no formato YYYY-MM-DD: ")
while(is.element(resposta_data_nova, datas_tratadas) == F){
print(datas_tratadas)
resposta_data_nova <- readline(prompt = "Escolha uma data no formato YYYY-MM-DD: ")
}
dado_graf <- merge(dado_graf, select(get(resposta_data_nova), anos, resposta_dados), by = "anos", all = T) %>%
rename(!!resposta_data_nova := resposta_dados)
dado_graf_mult <- dado_graf %>% na.omit() %>% pivot_longer(-1)
graf <- ggplot(dado_graf_mult, aes(x = anos, y = value, colour = name, label = sprintf("%0.2f", round(value,2)))) +
geom_line() + geom_point() +
scale_x_continuous(breaks = round(seq(min(dado_graf_mult$anos), max(dado_graf_mult$anos), by = 0.5),1)) +
scale_y_continuous(breaks = round(seq(min(dado_graf_mult$value), max(dado_graf_mult$value), by = 0.5),1)) +
theme(axis.text.x=element_text(angle=90, hjust=1), legend.position = "bottom") +
scale_colour_discrete(name = "Datas") +
labs(title = "Curva zero", subtitle = resposta_dados,
caption = "Fonte: Ambima") + ylab("%") + xlab("Anos")
# show(graf)
graf <- graf %>% ggplotly() %>% style(hoverinfo = "y")
show(graf)
}
}
usuario_data()
